{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { getAuth, signInWithEmailAndPassword, GoogleAuthProvider, signInWithRedirect, getRedirectResult } from 'firebase/auth';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebaseConfig from \"../../../authBase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var auth = getAuth(firebaseConfig);\n\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      navigation.replace('Home');\n      console.log('Logged in with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.inputText,\n        children: \"Username\"\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(Text, {\n        style: styles.inputText,\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Start!\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('Demo');\n        },\n        children: _jsx(Text, {\n          style: styles.forgotPassword,\n          children: \"Go Back\"\n        })\n      })]\n    })]\n  });\n}\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  title: {\n    position: 'absolute',\n    width: 154,\n    height: 68,\n    left: 143,\n    top: 180,\n    fontWeight: 'bold',\n    fontSize: 56,\n    color: '#E04D3D'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#323C47'\n  },\n  inputContainer: {\n    width: '70%',\n    marginBottom: 50\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    borderRadius: 15\n  },\n  inputText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 26,\n    lineHeight: 31,\n    fontStyle: 'normal',\n    marginTop: 50\n  },\n  buttonContainer: {\n    position: 'absolute',\n    height: 65,\n    width: 300,\n    left: 64,\n    top: 560\n  },\n  button: {\n    backgroundColor: '#E04D3D',\n    width: '100%',\n    padding: 15,\n    borderRadius: 25,\n    alignItems: 'center',\n    marginTop: 64\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#198F94',\n    borderWidth: 2\n  },\n  buttonText: {\n    height: 31,\n    left: 5,\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 26\n  }\n});","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","GoogleAuthProvider","signInWithRedirect","getRedirectResult","React","useEffect","useState","firebaseConfig","LoginScreen","navigation","email","setEmail","password","setPassword","auth","handleLogin","then","userCredentials","user","replace","console","log","catch","error","alert","message","styles","container","title","inputContainer","inputText","text","input","buttonContainer","button","buttonText","forgotPassword","StyleSheet","create","position","width","height","left","top","fontWeight","fontSize","color","flex","justifyContent","alignItems","backgroundColor","marginBottom","paddingHorizontal","paddingVertical","borderRadius","lineHeight","fontStyle","marginTop","padding","buttonOutline","borderColor","borderWidth"],"sources":["/Users/tangweijia/Desktop/mobile/team2/frontend/src/pages/login/index.js"],"sourcesContent":["import {\n  getAuth,\n  signInWithEmailAndPassword,\n  GoogleAuthProvider,\n  signInWithRedirect,\n  getRedirectResult\n} from 'firebase/auth';\nimport React, { useEffect, useState } from 'react';\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from 'react-native';\nimport firebaseConfig from '../../../authBase';\n\n\nfunction LoginScreen({ navigation }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const auth = getAuth(firebaseConfig);\n\n\n  const handleLogin = () => {\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredentials) => {\n        const user = userCredentials.user;\n        navigation.replace('Home');\n        console.log('Logged in with:', user.email);\n      })\n      .catch((error) => alert(error.message));\n  };\n\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior=\"padding\"\n    >\n\n      <Text style={styles.title}>Login</Text>\n\n\n      <View style={styles.inputContainer}>\n        <Text style={styles.inputText}>Username</Text>\n        <TextInput\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          style={styles.input}\n        />\n        <Text style={styles.inputText}>Password</Text>\n        <TextInput\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          style={styles.input}\n          secureTextEntry\n        />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          onPress={handleLogin}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}>Start!</Text>\n        </TouchableOpacity>\n\n\n\n\n        <TouchableOpacity\n          onPress = {() => navigation.replace('Demo')}\n          >\n          <Text style={styles.forgotPassword}>Go Back</Text>\n        </TouchableOpacity>\n      </View>\n\n      \n    </KeyboardAvoidingView>\n  );\n}\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n\n  title: {\n      position: 'absolute',\n      width: 154,\n      height: 68,\n      left: 143,\n      top: 180,\n\n      fontWeight: 'bold',\n      fontSize: 56,\n\n      color: '#E04D3D',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#323C47',\n    \n  },\n  inputContainer: {\n    width: '70%',\n      marginBottom: 50,\n  },\n  input: {\n\n      backgroundColor: 'white',\n      paddingHorizontal: 15,\n      paddingVertical: 20,\n      borderRadius: 15,\n  },\n  inputText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 26,\n    lineHeight: 31,\n    fontStyle: 'normal',\n    marginTop: 50,\n  },\n\n  buttonContainer: {\n      position: 'absolute',\n      height: 65,\n      width: 300,\n      left: 64,\n      top: 560,\n\n  },\n  button: {\n    backgroundColor: '#E04D3D',\n    width: '100%',\n    padding: 15,\n    borderRadius: 25,\n    alignItems: 'center',\n    marginTop: 64,\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#198F94',\n    borderWidth: 2,\n  },\n  buttonText: {\n      height: 31,\n      left: 5,\n      color: 'white',\n      fontWeight: '700',\n      fontSize: 26,\n  },\n\n});"],"mappings":";AAAA,SACEA,OADF,EAEEC,0BAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,iBALF,QAMO,eANP;AAOA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AASA,OAAOC,cAAP;;;;AAGA,SAASC,WAAT,OAAqC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACnC,gBAA0BH,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCL,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOM,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMC,IAAI,GAAGf,OAAO,CAACQ,cAAD,CAApB;;EAGA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBf,0BAA0B,CAACc,IAAD,EAAOJ,KAAP,EAAcE,QAAd,CAA1B,CACGI,IADH,CACQ,UAACC,eAAD,EAAqB;MACzB,IAAMC,IAAI,GAAGD,eAAe,CAACC,IAA7B;MACAT,UAAU,CAACU,OAAX,CAAmB,MAAnB;MACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,IAAI,CAACR,KAApC;IACD,CALH,EAMGY,KANH,CAMS,UAACC,KAAD;MAAA,OAAWC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAhB;IAAA,CANT;EAOD,CARD;;EAWA,OACE,MAAC,oBAAD;IACE,KAAK,EAAEC,MAAM,CAACC,SADhB;IAEE,QAAQ,EAAC,SAFX;IAAA,WAKE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,KAApB;MAAA;IAAA,EALF,EAQE,MAAC,IAAD;MAAM,KAAK,EAAEF,MAAM,CAACG,cAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,SAApB;QAAA;MAAA,EADF,EAEE,KAAC,SAAD;QACE,WAAW,EAAC,OADd;QAEE,KAAK,EAAEpB,KAFT;QAGE,YAAY,EAAE,sBAACqB,IAAD;UAAA,OAAUpB,QAAQ,CAACoB,IAAD,CAAlB;QAAA,CAHhB;QAIE,KAAK,EAAEL,MAAM,CAACM;MAJhB,EAFF,EAQE,KAAC,IAAD;QAAM,KAAK,EAAEN,MAAM,CAACI,SAApB;QAAA;MAAA,EARF,EASE,KAAC,SAAD;QACE,WAAW,EAAC,UADd;QAEE,KAAK,EAAElB,QAFT;QAGE,YAAY,EAAE,sBAACmB,IAAD;UAAA,OAAUlB,WAAW,CAACkB,IAAD,CAArB;QAAA,CAHhB;QAIE,KAAK,EAAEL,MAAM,CAACM,KAJhB;QAKE,eAAe;MALjB,EATF;IAAA,EARF,EA0BE,MAAC,IAAD;MAAM,KAAK,EAAEN,MAAM,CAACO,eAApB;MAAA,WACE,KAAC,gBAAD;QACE,OAAO,EAAElB,WADX;QAEE,KAAK,EAAEW,MAAM,CAACQ,MAFhB;QAAA,UAIE,KAAC,IAAD;UAAM,KAAK,EAAER,MAAM,CAACS,UAApB;UAAA;QAAA;MAJF,EADF,EAWE,KAAC,gBAAD;QACE,OAAO,EAAI;UAAA,OAAM1B,UAAU,CAACU,OAAX,CAAmB,MAAnB,CAAN;QAAA,CADb;QAAA,UAGE,KAAC,IAAD;UAAM,KAAK,EAAEO,MAAM,CAACU,cAApB;UAAA;QAAA;MAHF,EAXF;IAAA,EA1BF;EAAA,EADF;AAgDD;;AAED,eAAe5B,WAAf;AAEA,IAAMkB,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;EAE/BV,KAAK,EAAE;IACHW,QAAQ,EAAE,UADP;IAEHC,KAAK,EAAE,GAFJ;IAGHC,MAAM,EAAE,EAHL;IAIHC,IAAI,EAAE,GAJH;IAKHC,GAAG,EAAE,GALF;IAOHC,UAAU,EAAE,MAPT;IAQHC,QAAQ,EAAE,EARP;IAUHC,KAAK,EAAE;EAVJ,CAFwB;EAc/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CADG;IAETC,cAAc,EAAE,QAFP;IAGTC,UAAU,EAAE,QAHH;IAITC,eAAe,EAAE;EAJR,CAdoB;EAqB/BrB,cAAc,EAAE;IACdW,KAAK,EAAE,KADO;IAEZW,YAAY,EAAE;EAFF,CArBe;EAyB/BnB,KAAK,EAAE;IAEHkB,eAAe,EAAE,OAFd;IAGHE,iBAAiB,EAAE,EAHhB;IAIHC,eAAe,EAAE,EAJd;IAKHC,YAAY,EAAE;EALX,CAzBwB;EAgC/BxB,SAAS,EAAE;IACTgB,KAAK,EAAE,OADE;IAETF,UAAU,EAAE,KAFH;IAGTC,QAAQ,EAAE,EAHD;IAITU,UAAU,EAAE,EAJH;IAKTC,SAAS,EAAE,QALF;IAMTC,SAAS,EAAE;EANF,CAhCoB;EAyC/BxB,eAAe,EAAE;IACbM,QAAQ,EAAE,UADG;IAEbE,MAAM,EAAE,EAFK;IAGbD,KAAK,EAAE,GAHM;IAIbE,IAAI,EAAE,EAJO;IAKbC,GAAG,EAAE;EALQ,CAzCc;EAiD/BT,MAAM,EAAE;IACNgB,eAAe,EAAE,SADX;IAENV,KAAK,EAAE,MAFD;IAGNkB,OAAO,EAAE,EAHH;IAINJ,YAAY,EAAE,EAJR;IAKNL,UAAU,EAAE,QALN;IAMNQ,SAAS,EAAE;EANL,CAjDuB;EAyD/BE,aAAa,EAAE;IACbT,eAAe,EAAE,OADJ;IAEbO,SAAS,EAAE,CAFE;IAGbG,WAAW,EAAE,SAHA;IAIbC,WAAW,EAAE;EAJA,CAzDgB;EA+D/B1B,UAAU,EAAE;IACRM,MAAM,EAAE,EADA;IAERC,IAAI,EAAE,CAFE;IAGRI,KAAK,EAAE,OAHC;IAIRF,UAAU,EAAE,KAJJ;IAKRC,QAAQ,EAAE;EALF;AA/DmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}