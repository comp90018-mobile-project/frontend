{"ast":null,"code":"import * as React from 'react';\nvar context = React.createContext({\n  showActionSheetWithOptions: function showActionSheetWithOptions(options, callback) {}\n});\nexport function useActionSheet() {\n  return React.useContext(context);\n}\nvar Provider = context.Provider,\n    Consumer = context.Consumer;\nexport { Provider, Consumer };","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,IAAMC,OAAO,GAAGD,KAAK,CAACE,aAANF,CAAsC;EACpDG,0BAA0B,EAAE,oCAACC,OAAD,EAA8BC,QAA9B,EAAgE,CADxC;AAAA,CAAtCL,CAAhB;AAIA,OAAO,SAASM,cAAT,GAA0B;EAC/B,OAAON,KAAK,CAACO,UAANP,CAAiBC,OAAjBD,CAAP;;IAGMQ,Q,GAAuBP,O,CAAvBO,Q;IAAUC,Q,GAAaR,O,CAAbQ,Q;AAElB,SAASD,QAAT,EAAmBC,QAAnB","names":["React","context","createContext","showActionSheetWithOptions","options","callback","useActionSheet","useContext","Provider","Consumer"],"sources":["context.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { ActionSheetOptions, ActionSheetProps } from './types';\n\nconst context = React.createContext<ActionSheetProps>({\n  showActionSheetWithOptions: (options: ActionSheetOptions, callback: (i: number) => void) => {},\n});\n\nexport function useActionSheet() {\n  return React.useContext(context);\n}\n\nconst { Provider, Consumer } = context;\n\nexport { Provider, Consumer };\n"]},"metadata":{},"sourceType":"module"}