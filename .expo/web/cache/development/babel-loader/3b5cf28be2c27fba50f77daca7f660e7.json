{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback, useEffect, useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, collection, addDoc, getDocs, getDoc, doc, onSnapshot, query, orderBy } from 'firebase/firestore';\nimport firebaseConfig from \"../../../authBase\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { initializeApp } from 'firebase/app';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUser } from \"../../services/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Chat(_ref) {\n  var _auth$currentUser2;\n\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var auth = getAuth(firebaseConfig);\n  var db = getFirestore(firebaseConfig);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTyping = _useState2[0],\n      setIsTyping = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useEffect(function () {\n    var _auth$currentUser;\n\n    dispatch(fetchUser((_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email));\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      u = _useSelector.u,\n      p = _useSelector.p,\n      nickname = _useSelector.nickname,\n      avatar = _useSelector.avatar;\n\n  console.log(\"nickname and avatar:\", nickname, avatar);\n  useLayoutEffect(function () {\n    var dataCollection = collection(db, \"chats\");\n    var q = query(dataCollection, orderBy('createdAt', 'desc'));\n    var unsubscribe = onSnapshot(q, function (querySnapshot) {\n      setMessages(querySnapshot.docs.map(function (doc) {\n        return {\n          _id: doc.id,\n          createdAt: doc.data().createdAt.toDate(),\n          text: doc.data().text,\n          user: doc.data().user\n        };\n      }));\n      return unsubscribe;\n    });\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n    var _messages$ = messages[0],\n        _id = _messages$._id,\n        createdAt = _messages$.createdAt,\n        text = _messages$.text,\n        user = _messages$.user;\n    addDoc(collection(db, \"chats\"), {\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user\n    });\n  }, []);\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: id\n    }), _jsxs(Text, {\n      children: [\"nickname and avatar:\", nickname, \" \", avatar]\n    }), _jsx(GiftedChat, {\n      messages: messages,\n      showAvatarForEveryMessage: true,\n      onSend: function onSend(messages) {\n        return _onSend(messages);\n      },\n      user: {\n        _id: (_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.email\n      }\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: '#fff'\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","useState","useCallback","useEffect","useLayoutEffect","getAuth","getFirestore","collection","addDoc","getDocs","getDoc","doc","onSnapshot","query","orderBy","firebaseConfig","GiftedChat","initializeApp","useDispatch","useSelector","fetchUser","Chat","navigation","dispatch","auth","db","isTyping","setIsTyping","messages","setMessages","currentUser","email","state","user","u","p","nickname","avatar","console","log","dataCollection","q","unsubscribe","querySnapshot","docs","map","_id","id","createdAt","data","toDate","text","onSend","previousMessages","append","styles","container","StyleSheet","create","flex","width","backgroundColor"],"sources":["/Users/tangweijia/Desktop/mobile/team2/frontend/src/pages/chat/index.js"],"sourcesContent":["import React , { useState, useCallback, useEffect, useLayoutEffect }from 'react';\nimport { StyleSheet,  Button,Text, View, TextInput, SafeAreaView} from 'react-native';\nimport { getAuth } from 'firebase/auth';\nimport {getFirestore,collection,addDoc,getDocs,getDoc,doc,onSnapshot, query,orderBy} from 'firebase/firestore';\nimport firebaseConfig from '../../../authBase';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { initializeApp } from 'firebase/app';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUser } from '../../services/api';\n\nfunction Chat({ navigation }) {\n  const dispatch = useDispatch();\n  \n    const auth = getAuth(firebaseConfig);\n\n    const db = getFirestore(firebaseConfig);\n    const [isTyping, setIsTyping] = useState(false)\n    const [messages, setMessages] = useState([]);\n    useEffect(() => {\n      dispatch(fetchUser(auth.currentUser?.email));\n    }, [])\n    const {u, p, nickname, avatar} = useSelector(state => state.user);\n    console.log(\"nickname and avatar:\", nickname, avatar);\n\n    useLayoutEffect(() => {\n        const dataCollection = collection(db,\"chats\")\n        const q = query(dataCollection,orderBy('createdAt','desc'));\n\n        const unsubscribe = onSnapshot(q,querySnapshot=>{\n            setMessages(\n                querySnapshot.docs.map(doc=>({\n                    _id: doc.id,\n                    createdAt:doc.data().createdAt.toDate(),\n                    text:doc.data().text,\n                    user:doc.data().user,\n                }))\n            )\n            return unsubscribe;\n\n        })\n\n    }, [])\n\n    const onSend = useCallback((messages = []) => {\n        \n      setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n      const{\n        _id,\n        createdAt,\n        text,\n        user,\n      } = messages[0]\n      \n        addDoc(collection(db, \"chats\"), {\n            _id,\n            createdAt,\n            text,\n            user,\n        });\n    }, [])\n  \n    return (\n      <View style={styles.container}>\n        <Text>{id}</Text>\n        <Text>nickname and avatar:{nickname} {avatar}</Text>\n        \n        <GiftedChat\n          messages={messages}\n          showAvatarForEveryMessage\n          \n          onSend={messages => onSend(messages)}\n          user={{\n            _id: auth.currentUser?.email,\n\n          }}\n      />\n      </View>\n    );\n\n}\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      width: '100%',\n      backgroundColor: '#fff',\n    },\n  });\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}