{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"headers\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Blob from \"../Blob/Blob\";\nimport BlobManager from \"../Blob/BlobManager\";\nimport NativeEventEmitter from \"../EventEmitter/NativeEventEmitter\";\nimport binaryToBase64 from \"../Utilities/binaryToBase64\";\nimport Platform from \"../Utilities/Platform\";\nimport NativeWebSocketModule from \"./NativeWebSocketModule\";\nimport WebSocketEvent from \"./WebSocketEvent\";\nimport base64 from 'base64-js';\nimport EventTarget from 'event-target-shim';\nimport invariant from 'invariant';\nvar CONNECTING = 0;\nvar OPEN = 1;\nvar CLOSING = 2;\nvar CLOSED = 3;\nvar CLOSE_NORMAL = 1000;\nvar WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\nvar nextWebSocketId = 0;\n\nvar WebSocket = function (_ref) {\n  _inherits(WebSocket, _ref);\n\n  var _super = _createSuper(WebSocket);\n\n  function WebSocket(url, protocols, options) {\n    var _this;\n\n    _classCallCheck(this, WebSocket);\n\n    _this = _super.call(this);\n    _this.CONNECTING = CONNECTING;\n    _this.OPEN = OPEN;\n    _this.CLOSING = CLOSING;\n    _this.CLOSED = CLOSED;\n    _this.readyState = CONNECTING;\n    _this.url = url;\n\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    var _ref2 = options || {},\n        _ref2$headers = _ref2.headers,\n        headers = _ref2$headers === void 0 ? {} : _ref2$headers,\n        unrecognized = _objectWithoutProperties(_ref2, _excluded);\n\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn('Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.');\n      headers.origin = unrecognized.origin;\n      delete unrecognized.origin;\n    }\n\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn('Unrecognized WebSocket connection option(s) `' + Object.keys(unrecognized).join('`, `') + '`. ' + 'Did you mean to put these under `headers`?');\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    _this._eventEmitter = new NativeEventEmitter(Platform.OS !== 'ios' ? null : NativeWebSocketModule);\n    _this._socketId = nextWebSocketId++;\n\n    _this._registerEvents();\n\n    NativeWebSocketModule.connect(url, protocols, {\n      headers: headers\n    }, _this._socketId);\n    return _this;\n  }\n\n  _createClass(WebSocket, [{\n    key: \"binaryType\",\n    get: function get() {\n      return this._binaryType;\n    },\n    set: function set(binaryType) {\n      if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n        throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n      }\n\n      if (this._binaryType === 'blob' || binaryType === 'blob') {\n        invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n\n        if (binaryType === 'blob') {\n          BlobManager.addWebSocketHandler(this._socketId);\n        } else {\n          BlobManager.removeWebSocketHandler(this._socketId);\n        }\n      }\n\n      this._binaryType = binaryType;\n    }\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n        return;\n      }\n\n      this.readyState = this.CLOSING;\n\n      this._close(code, reason);\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n      }\n\n      if (data instanceof Blob) {\n        invariant(BlobManager.isAvailable, 'Native module BlobModule is required for blob support');\n        BlobManager.sendOverSocket(data, this._socketId);\n        return;\n      }\n\n      if (typeof data === 'string') {\n        NativeWebSocketModule.send(data, this._socketId);\n        return;\n      }\n\n      if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n        NativeWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n        return;\n      }\n\n      throw new Error('Unsupported data type');\n    }\n  }, {\n    key: \"ping\",\n    value: function ping() {\n      if (this.readyState === this.CONNECTING) {\n        throw new Error('INVALID_STATE_ERR');\n      }\n\n      NativeWebSocketModule.ping(this._socketId);\n    }\n  }, {\n    key: \"_close\",\n    value: function _close(code, reason) {\n      var statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n      var closeReason = typeof reason === 'string' ? reason : '';\n      NativeWebSocketModule.close(statusCode, closeReason, this._socketId);\n\n      if (BlobManager.isAvailable && this._binaryType === 'blob') {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n  }, {\n    key: \"_unregisterEvents\",\n    value: function _unregisterEvents() {\n      this._subscriptions.forEach(function (e) {\n        return e.remove();\n      });\n\n      this._subscriptions = [];\n    }\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents() {\n      var _this2 = this;\n\n      this._subscriptions = [this._eventEmitter.addListener('websocketMessage', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n\n        var data = ev.data;\n\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n\n          case 'blob':\n            data = BlobManager.createFromOptions(ev.data);\n            break;\n        }\n\n        _this2.dispatchEvent(new WebSocketEvent('message', {\n          data: data\n        }));\n      }), this._eventEmitter.addListener('websocketOpen', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n\n        _this2.readyState = _this2.OPEN;\n        _this2.protocol = ev.protocol;\n\n        _this2.dispatchEvent(new WebSocketEvent('open'));\n      }), this._eventEmitter.addListener('websocketClosed', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n\n        _this2.readyState = _this2.CLOSED;\n\n        _this2.dispatchEvent(new WebSocketEvent('close', {\n          code: ev.code,\n          reason: ev.reason\n        }));\n\n        _this2._unregisterEvents();\n\n        _this2.close();\n      }), this._eventEmitter.addListener('websocketFailed', function (ev) {\n        if (ev.id !== _this2._socketId) {\n          return;\n        }\n\n        _this2.readyState = _this2.CLOSED;\n\n        _this2.dispatchEvent(new WebSocketEvent('error', {\n          message: ev.message\n        }));\n\n        _this2.dispatchEvent(new WebSocketEvent('close', {\n          message: ev.message\n        }));\n\n        _this2._unregisterEvents();\n\n        _this2.close();\n      })];\n    }\n  }]);\n\n  return WebSocket;\n}(EventTarget.apply(void 0, WEBSOCKET_EVENTS));\n\nWebSocket.CONNECTING = CONNECTING;\nWebSocket.OPEN = OPEN;\nWebSocket.CLOSING = CLOSING;\nWebSocket.CLOSED = CLOSED;\nmodule.exports = WebSocket;","map":{"version":3,"names":["Blob","BlobManager","NativeEventEmitter","binaryToBase64","Platform","NativeWebSocketModule","WebSocketEvent","base64","EventTarget","invariant","CONNECTING","OPEN","CLOSING","CLOSED","CLOSE_NORMAL","WEBSOCKET_EVENTS","nextWebSocketId","WebSocket","url","protocols","options","readyState","headers","unrecognized","origin","console","warn","Object","keys","length","join","Array","isArray","_eventEmitter","OS","_socketId","_registerEvents","connect","_binaryType","binaryType","Error","isAvailable","addWebSocketHandler","removeWebSocketHandler","code","reason","_close","data","sendOverSocket","send","ArrayBuffer","isView","sendBinary","ping","statusCode","closeReason","close","_subscriptions","forEach","e","remove","addListener","ev","id","type","toByteArray","buffer","createFromOptions","dispatchEvent","protocol","_unregisterEvents","message","module","exports"],"sources":["/Users/tangweijia/Desktop/mobile/team2/frontend/node_modules/react-native/Libraries/WebSocket/WebSocket.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport Blob from '../Blob/Blob';\nimport type {BlobData} from '../Blob/BlobTypes';\nimport BlobManager from '../Blob/BlobManager';\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport binaryToBase64 from '../Utilities/binaryToBase64';\nimport Platform from '../Utilities/Platform';\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\nimport NativeWebSocketModule from './NativeWebSocketModule';\nimport WebSocketEvent from './WebSocketEvent';\nimport base64 from 'base64-js';\nimport EventTarget from 'event-target-shim';\nimport invariant from 'invariant';\n\ntype ArrayBufferView =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array\n  | DataView;\n\ntype BinaryType = 'blob' | 'arraybuffer';\n\nconst CONNECTING = 0;\nconst OPEN = 1;\nconst CLOSING = 2;\nconst CLOSED = 3;\n\nconst CLOSE_NORMAL = 1000;\n\nconst WEBSOCKET_EVENTS = ['close', 'error', 'message', 'open'];\n\nlet nextWebSocketId = 0;\n\ntype WebSocketEventDefinitions = {\n  websocketOpen: [{id: number, protocol: string}],\n  websocketClosed: [{id: number, code: number, reason: string}],\n  websocketMessage: [\n    | {type: 'binary', id: number, data: string}\n    | {type: 'text', id: number, data: string}\n    | {type: 'blob', id: number, data: BlobData},\n  ],\n  websocketFailed: [{id: number, message: string}],\n};\n\n/**\n * Browser-compatible WebSockets implementation.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * See https://github.com/websockets/ws\n */\nclass WebSocket extends (EventTarget(...WEBSOCKET_EVENTS): any) {\n  static CONNECTING: number = CONNECTING;\n  static OPEN: number = OPEN;\n  static CLOSING: number = CLOSING;\n  static CLOSED: number = CLOSED;\n\n  CONNECTING: number = CONNECTING;\n  OPEN: number = OPEN;\n  CLOSING: number = CLOSING;\n  CLOSED: number = CLOSED;\n\n  _socketId: number;\n  _eventEmitter: NativeEventEmitter<WebSocketEventDefinitions>;\n  _subscriptions: Array<EventSubscription>;\n  _binaryType: ?BinaryType;\n\n  onclose: ?Function;\n  onerror: ?Function;\n  onmessage: ?Function;\n  onopen: ?Function;\n\n  bufferedAmount: number;\n  extension: ?string;\n  protocol: ?string;\n  readyState: number = CONNECTING;\n  url: ?string;\n\n  constructor(\n    url: string,\n    protocols: ?string | ?Array<string>,\n    options: ?{headers?: {origin?: string, ...}, ...},\n  ) {\n    super();\n    this.url = url;\n    if (typeof protocols === 'string') {\n      protocols = [protocols];\n    }\n\n    const {headers = {}, ...unrecognized} = options || {};\n\n    // Preserve deprecated backwards compatibility for the 'origin' option\n    if (unrecognized && typeof unrecognized.origin === 'string') {\n      console.warn(\n        'Specifying `origin` as a WebSocket connection option is deprecated. Include it under `headers` instead.',\n      );\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      headers.origin = unrecognized.origin;\n      /* $FlowFixMe[prop-missing] (>=0.54.0 site=react_native_fb,react_native_\n       * oss) This comment suppresses an error found when Flow v0.54 was\n       * deployed. To see the error delete this comment and run Flow. */\n      delete unrecognized.origin;\n    }\n\n    // Warn about and discard anything else\n    if (Object.keys(unrecognized).length > 0) {\n      console.warn(\n        'Unrecognized WebSocket connection option(s) `' +\n          Object.keys(unrecognized).join('`, `') +\n          '`. ' +\n          'Did you mean to put these under `headers`?',\n      );\n    }\n\n    if (!Array.isArray(protocols)) {\n      protocols = null;\n    }\n\n    this._eventEmitter = new NativeEventEmitter(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeWebSocketModule,\n    );\n    this._socketId = nextWebSocketId++;\n    this._registerEvents();\n    NativeWebSocketModule.connect(url, protocols, {headers}, this._socketId);\n  }\n\n  get binaryType(): ?BinaryType {\n    return this._binaryType;\n  }\n\n  set binaryType(binaryType: BinaryType): void {\n    if (binaryType !== 'blob' && binaryType !== 'arraybuffer') {\n      throw new Error(\"binaryType must be either 'blob' or 'arraybuffer'\");\n    }\n    if (this._binaryType === 'blob' || binaryType === 'blob') {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      if (binaryType === 'blob') {\n        BlobManager.addWebSocketHandler(this._socketId);\n      } else {\n        BlobManager.removeWebSocketHandler(this._socketId);\n      }\n    }\n    this._binaryType = binaryType;\n  }\n\n  close(code?: number, reason?: string): void {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.readyState = this.CLOSING;\n    this._close(code, reason);\n  }\n\n  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    if (data instanceof Blob) {\n      invariant(\n        BlobManager.isAvailable,\n        'Native module BlobModule is required for blob support',\n      );\n      BlobManager.sendOverSocket(data, this._socketId);\n      return;\n    }\n\n    if (typeof data === 'string') {\n      NativeWebSocketModule.send(data, this._socketId);\n      return;\n    }\n\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n      NativeWebSocketModule.sendBinary(binaryToBase64(data), this._socketId);\n      return;\n    }\n\n    throw new Error('Unsupported data type');\n  }\n\n  ping(): void {\n    if (this.readyState === this.CONNECTING) {\n      throw new Error('INVALID_STATE_ERR');\n    }\n\n    NativeWebSocketModule.ping(this._socketId);\n  }\n\n  _close(code?: number, reason?: string): void {\n    // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n    const statusCode = typeof code === 'number' ? code : CLOSE_NORMAL;\n    const closeReason = typeof reason === 'string' ? reason : '';\n    NativeWebSocketModule.close(statusCode, closeReason, this._socketId);\n\n    if (BlobManager.isAvailable && this._binaryType === 'blob') {\n      BlobManager.removeWebSocketHandler(this._socketId);\n    }\n  }\n\n  _unregisterEvents(): void {\n    this._subscriptions.forEach(e => e.remove());\n    this._subscriptions = [];\n  }\n\n  _registerEvents(): void {\n    this._subscriptions = [\n      this._eventEmitter.addListener('websocketMessage', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        let data = ev.data;\n        switch (ev.type) {\n          case 'binary':\n            data = base64.toByteArray(ev.data).buffer;\n            break;\n          case 'blob':\n            data = BlobManager.createFromOptions(ev.data);\n            break;\n        }\n        this.dispatchEvent(new WebSocketEvent('message', {data}));\n      }),\n      this._eventEmitter.addListener('websocketOpen', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.OPEN;\n        this.protocol = ev.protocol;\n        this.dispatchEvent(new WebSocketEvent('open'));\n      }),\n      this._eventEmitter.addListener('websocketClosed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            code: ev.code,\n            reason: ev.reason,\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n      this._eventEmitter.addListener('websocketFailed', ev => {\n        if (ev.id !== this._socketId) {\n          return;\n        }\n        this.readyState = this.CLOSED;\n        this.dispatchEvent(\n          new WebSocketEvent('error', {\n            message: ev.message,\n          }),\n        );\n        this.dispatchEvent(\n          new WebSocketEvent('close', {\n            message: ev.message,\n          }),\n        );\n        this._unregisterEvents();\n        this.close();\n      }),\n    ];\n  }\n}\n\nmodule.exports = WebSocket;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}