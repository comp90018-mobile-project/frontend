{"ast":null,"code":"var React = require('react');\n\nvar Platform = require(\"../../Utilities/Platform\");\n\nvar _require = require(\"../../Renderer/shims/ReactNative\"),\n    findNodeHandle = _require.findNodeHandle;\n\nimport { Commands as AndroidTextInputCommands } from \"../../Components/TextInput/AndroidTextInputNativeComponent\";\nimport { Commands as iOSTextInputCommands } from \"../../Components/TextInput/RCTSingelineTextInputNativeComponent\";\nvar currentlyFocusedInputRef = null;\nvar inputs = new Set();\n\nfunction currentlyFocusedInput() {\n  return currentlyFocusedInputRef;\n}\n\nfunction currentlyFocusedField() {\n  if (__DEV__) {\n    console.error('currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput');\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField) {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField) {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID) {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\nfunction focusTextInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('focusTextInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    focusInput(textField);\n\n    if (Platform.OS === 'ios') {\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\nfunction blurTextInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('blurTextInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n\n    if (Platform.OS === 'ios') {\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('registerInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('unregisterInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n\n    return;\n  }\n\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error('isTextInput must be called with a host component. Passing a react tag is deprecated.');\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput: currentlyFocusedInput,\n  focusInput: focusInput,\n  blurInput: blurInput,\n  currentlyFocusedField: currentlyFocusedField,\n  focusField: focusField,\n  blurField: blurField,\n  focusTextInput: focusTextInput,\n  blurTextInput: blurTextInput,\n  registerInput: registerInput,\n  unregisterInput: unregisterInput,\n  isTextInput: isTextInput\n};","map":{"version":3,"names":["React","require","Platform","findNodeHandle","Commands","AndroidTextInputCommands","iOSTextInputCommands","currentlyFocusedInputRef","inputs","Set","currentlyFocusedInput","currentlyFocusedField","__DEV__","console","error","focusInput","textField","blurInput","focusField","textFieldID","blurField","focusTextInput","OS","focus","blurTextInput","blur","registerInput","add","unregisterInput","delete","isTextInput","has","module","exports"],"sources":["/Users/tangweijia/Desktop/mobile/team2/frontend/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// This class is responsible for coordinating the \"focused\" state for\n// TextInputs. All calls relating to the keyboard should be funneled\n// through here.\n\nconst React = require('react');\nconst Platform = require('../../Utilities/Platform');\nconst {findNodeHandle} = require('../../Renderer/shims/ReactNative');\nimport {Commands as AndroidTextInputCommands} from '../../Components/TextInput/AndroidTextInputNativeComponent';\nimport {Commands as iOSTextInputCommands} from '../../Components/TextInput/RCTSingelineTextInputNativeComponent';\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\ntype ComponentRef = React.ElementRef<HostComponent<mixed>>;\n\nlet currentlyFocusedInputRef: ?ComponentRef = null;\nconst inputs = new Set();\n\nfunction currentlyFocusedInput(): ?ComponentRef {\n  return currentlyFocusedInputRef;\n}\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  if (__DEV__) {\n    console.error(\n      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',\n    );\n  }\n\n  return findNodeHandle(currentlyFocusedInputRef);\n}\n\nfunction focusInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    currentlyFocusedInputRef = textField;\n  }\n}\n\nfunction blurInput(textField: ?ComponentRef): void {\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    currentlyFocusedInputRef = null;\n  }\n}\n\nfunction focusField(textFieldID: ?number): void {\n  if (__DEV__) {\n    console.error('focusField no longer works. Use focusInput');\n  }\n\n  return;\n}\n\nfunction blurField(textFieldID: ?number) {\n  if (__DEV__) {\n    console.error('blurField no longer works. Use blurInput');\n  }\n\n  return;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused\n */\nfunction focusTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'focusTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef !== textField && textField != null) {\n    focusInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.focus(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.focus(textField);\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textField: ?ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'blurTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  if (currentlyFocusedInputRef === textField && textField != null) {\n    blurInput(textField);\n    if (Platform.OS === 'ios') {\n      // This isn't necessarily a single line text input\n      // But commands don't actually care as long as the thing being passed in\n      // actually has a command with that name. So this should work with single\n      // and multiline text inputs. Ideally we'll merge them into one component\n      // in the future.\n      iOSTextInputCommands.blur(textField);\n    } else if (Platform.OS === 'android') {\n      AndroidTextInputCommands.blur(textField);\n    }\n  }\n}\n\nfunction registerInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'registerInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n\n  inputs.add(textField);\n}\n\nfunction unregisterInput(textField: ComponentRef) {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'unregisterInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return;\n  }\n  inputs.delete(textField);\n}\n\nfunction isTextInput(textField: ComponentRef): boolean {\n  if (typeof textField === 'number') {\n    if (__DEV__) {\n      console.error(\n        'isTextInput must be called with a host component. Passing a react tag is deprecated.',\n      );\n    }\n\n    return false;\n  }\n\n  return inputs.has(textField);\n}\n\nmodule.exports = {\n  currentlyFocusedInput,\n  focusInput,\n  blurInput,\n\n  currentlyFocusedField,\n  focusField,\n  blurField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}