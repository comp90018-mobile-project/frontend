{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PropTypes from 'prop-types';\nimport React, { useState, useMemo } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useCallbackOne } from 'use-memo-one';\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { warning } from \"./logging\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    maxWidth: 300\n  },\n  quickReply: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    maxWidth: 200,\n    paddingVertical: 7,\n    paddingHorizontal: 12,\n    minHeight: 50,\n    borderRadius: 13,\n    margin: 3\n  },\n  quickReplyText: {\n    overflow: 'visible'\n  },\n  sendLink: {\n    borderWidth: 0\n  },\n  sendLinkText: {\n    color: Color.defaultBlue,\n    fontWeight: '600',\n    fontSize: 17\n  }\n});\n\nvar sameReply = function sameReply(currentReply) {\n  return function (reply) {\n    return currentReply.value === reply.value;\n  };\n};\n\nvar diffReply = function diffReply(currentReply) {\n  return function (reply) {\n    return currentReply.value !== reply.value;\n  };\n};\n\nexport function QuickReplies(_ref) {\n  var currentMessage = _ref.currentMessage,\n      nextMessage = _ref.nextMessage,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? Color.peterRiver : _ref$color,\n      quickReplyStyle = _ref.quickReplyStyle,\n      quickReplyTextStyle = _ref.quickReplyTextStyle,\n      onQuickReply = _ref.onQuickReply,\n      _ref$sendText = _ref.sendText,\n      sendText = _ref$sendText === void 0 ? 'Send' : _ref$sendText,\n      renderQuickReplySend = _ref.renderQuickReplySend;\n  var type = currentMessage.quickReplies.type;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      replies = _useState2[0],\n      setReplies = _useState2[1];\n\n  var shouldComponentDisplay = useMemo(function () {\n    var hasReplies = !!currentMessage && !!currentMessage.quickReplies;\n    var hasNext = !!nextMessage && !!nextMessage._id;\n    var keepIt = currentMessage.quickReplies.keepIt;\n\n    if (hasReplies && !hasNext) {\n      return true;\n    }\n\n    if (hasReplies && hasNext && keepIt) {\n      return true;\n    }\n\n    return false;\n  }, [currentMessage, nextMessage]);\n  var handlePress = useCallbackOne(function (reply) {\n    return function () {\n      if (currentMessage) {\n        var _type = currentMessage.quickReplies.type;\n\n        switch (_type) {\n          case 'radio':\n            {\n              handleSend([reply])();\n              return;\n            }\n\n          case 'checkbox':\n            {\n              if (replies.find(sameReply(reply))) {\n                setReplies(replies.filter(diffReply(reply)));\n              } else {\n                setReplies([].concat(_toConsumableArray(replies), [reply]));\n              }\n\n              return;\n            }\n\n          default:\n            {\n              warning(\"onQuickReply unknown type: \" + _type);\n              return;\n            }\n        }\n      }\n    };\n  }, [replies, currentMessage]);\n\n  var handleSend = function handleSend(repliesData) {\n    return function () {\n      onQuickReply === null || onQuickReply === void 0 ? void 0 : onQuickReply(repliesData.map(function (reply) {\n        return _objectSpread(_objectSpread({}, reply), {}, {\n          messageId: currentMessage._id\n        });\n      }));\n    };\n  };\n\n  if (!shouldComponentDisplay) {\n    return null;\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [currentMessage.quickReplies.values.map(function (reply, index) {\n      var selected = type === 'checkbox' && replies.find(sameReply(reply));\n      return _jsx(TouchableOpacity, {\n        onPress: handlePress(reply),\n        style: [styles.quickReply, quickReplyStyle, {\n          borderColor: color\n        }, selected && {\n          backgroundColor: color\n        }],\n        children: _jsx(Text, {\n          numberOfLines: 10,\n          ellipsizeMode: 'tail',\n          style: [styles.quickReplyText, {\n            color: selected ? Color.white : color\n          }, quickReplyTextStyle],\n          children: reply.title\n        })\n      }, reply.value + \"-\" + index);\n    }), replies.length > 0 && _jsx(TouchableOpacity, {\n      style: [styles.quickReply, styles.sendLink],\n      onPress: handleSend(replies),\n      children: (renderQuickReplySend === null || renderQuickReplySend === void 0 ? void 0 : renderQuickReplySend()) || _jsx(Text, {\n        style: styles.sendLinkText,\n        children: sendText\n      })\n    })]\n  });\n}\nQuickReplies.propTypes = {\n  currentMessage: PropTypes.object.isRequired,\n  onQuickReply: PropTypes.func,\n  color: PropTypes.string,\n  sendText: PropTypes.string,\n  renderQuickReplySend: PropTypes.func,\n  quickReplyStyle: StylePropType\n};","map":{"version":3,"mappings":"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","names":["PropTypes","React","useState","useMemo","useCallbackOne","Color","StylePropType","warning","styles","StyleSheet","create","container","flexDirection","flexWrap","maxWidth","quickReply","justifyContent","alignItems","borderWidth","paddingVertical","paddingHorizontal","minHeight","borderRadius","margin","quickReplyText","overflow","sendLink","sendLinkText","color","defaultBlue","fontWeight","fontSize","sameReply","currentReply","reply","value","diffReply","QuickReplies","currentMessage","nextMessage","peterRiver","quickReplyStyle","quickReplyTextStyle","onQuickReply","sendText","renderQuickReplySend","type","quickReplies","replies","setReplies","shouldComponentDisplay","hasReplies","hasNext","_id","keepIt","handlePress","handleSend","find","filter","repliesData","map","messageId","values","index","selected","borderColor","backgroundColor","white","title","length","propTypes","object","isRequired","func","string"],"sourceRoot":"","sources":["../src/QuickReplies.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}