{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { MIN_COMPOSER_HEIGHT, DEFAULT_PLACEHOLDER } from \"./Constant\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { useCallbackOne } from 'use-memo-one';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  textInput: _objectSpread(_objectSpread({\n    flex: 1,\n    marginLeft: 10,\n    fontSize: 16,\n    lineHeight: 16\n  }, Platform.select({\n    web: {\n      paddingTop: 6,\n      paddingLeft: 4\n    }\n  })), {}, {\n    marginTop: Platform.select({\n      ios: 6,\n      android: 0,\n      web: 6\n    }),\n    marginBottom: Platform.select({\n      ios: 5,\n      android: 3,\n      web: 4\n    })\n  })\n});\nexport function Composer(_ref) {\n  var _ref$composerHeight = _ref.composerHeight,\n      composerHeight = _ref$composerHeight === void 0 ? MIN_COMPOSER_HEIGHT : _ref$composerHeight,\n      _ref$disableComposer = _ref.disableComposer,\n      disableComposer = _ref$disableComposer === void 0 ? false : _ref$disableComposer,\n      _ref$keyboardAppearan = _ref.keyboardAppearance,\n      keyboardAppearance = _ref$keyboardAppearan === void 0 ? 'default' : _ref$keyboardAppearan,\n      _ref$multiline = _ref.multiline,\n      multiline = _ref$multiline === void 0 ? true : _ref$multiline,\n      _ref$onInputSizeChang = _ref.onInputSizeChanged,\n      onInputSizeChanged = _ref$onInputSizeChang === void 0 ? function () {} : _ref$onInputSizeChang,\n      _ref$onTextChanged = _ref.onTextChanged,\n      onTextChanged = _ref$onTextChanged === void 0 ? function () {} : _ref$onTextChanged,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? DEFAULT_PLACEHOLDER : _ref$placeholder,\n      _ref$placeholderTextC = _ref.placeholderTextColor,\n      placeholderTextColor = _ref$placeholderTextC === void 0 ? Color.defaultColor : _ref$placeholderTextC,\n      _ref$text = _ref.text,\n      text = _ref$text === void 0 ? '' : _ref$text,\n      _ref$textInputAutoFoc = _ref.textInputAutoFocus,\n      textInputAutoFocus = _ref$textInputAutoFoc === void 0 ? false : _ref$textInputAutoFoc,\n      _ref$textInputProps = _ref.textInputProps,\n      textInputProps = _ref$textInputProps === void 0 ? {} : _ref$textInputProps,\n      textInputStyle = _ref.textInputStyle;\n  var layoutRef = useRef();\n  var handleOnLayout = useCallbackOne(function (_ref2) {\n    var layout = _ref2.nativeEvent.layout;\n\n    if (!layout) {\n      return;\n    }\n\n    if (!layoutRef || layoutRef.current && (layoutRef.current.width !== layout.width || layoutRef.current.height !== layout.height)) {\n      layoutRef.current = layout;\n      onInputSizeChanged(layout);\n    }\n  }, [onInputSizeChanged]);\n  return _jsx(TextInput, _objectSpread({\n    testID: placeholder,\n    accessible: true,\n    accessibilityLabel: placeholder,\n    placeholder: placeholder,\n    placeholderTextColor: placeholderTextColor,\n    multiline: multiline,\n    editable: !disableComposer,\n    onLayout: handleOnLayout,\n    onChangeText: onTextChanged,\n    style: [styles.textInput, textInputStyle, _objectSpread({\n      height: composerHeight\n    }, Platform.select({\n      web: {\n        outlineWidth: 0,\n        outlineColor: 'transparent',\n        outlineOffset: 0\n      }\n    }))],\n    autoFocus: textInputAutoFocus,\n    value: text,\n    enablesReturnKeyAutomatically: true,\n    underlineColorAndroid: \"transparent\",\n    keyboardAppearance: keyboardAppearance\n  }, textInputProps));\n}\nComposer.propTypes = {\n  composerHeight: PropTypes.number,\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  textInputProps: PropTypes.object,\n  onTextChanged: PropTypes.func,\n  onInputSizeChanged: PropTypes.func,\n  multiline: PropTypes.bool,\n  disableComposer: PropTypes.bool,\n  textInputStyle: StylePropType,\n  textInputAutoFocus: PropTypes.bool,\n  keyboardAppearance: PropTypes.string\n};","map":{"version":3,"mappings":"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","names":["PropTypes","React","useRef","MIN_COMPOSER_HEIGHT","DEFAULT_PLACEHOLDER","Color","StylePropType","useCallbackOne","styles","StyleSheet","create","textInput","flex","marginLeft","fontSize","lineHeight","Platform","select","web","paddingTop","paddingLeft","marginTop","ios","android","marginBottom","Composer","composerHeight","disableComposer","keyboardAppearance","multiline","onInputSizeChanged","onTextChanged","placeholder","placeholderTextColor","defaultColor","text","textInputAutoFocus","textInputProps","textInputStyle","layoutRef","handleOnLayout","layout","nativeEvent","current","width","height","outlineWidth","outlineColor","outlineOffset","propTypes","number","string","object","func","bool"],"sourceRoot":"","sources":["../src/Composer.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}