{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ParsedText from 'react-native-parsed-text';\nimport { StylePropType } from \"./utils\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { error } from \"./logging\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WWW_URL_PATTERN = /^www\\./i;\n\nvar _StyleSheet$create = StyleSheet.create({\n  textStyle: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: 10,\n    marginRight: 10\n  }\n}),\n    textStyle = _StyleSheet$create.textStyle;\n\nvar styles = {\n  left: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'black'\n    }, textStyle),\n    link: {\n      color: 'black',\n      textDecorationLine: 'underline'\n    }\n  }),\n  right: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'white'\n    }, textStyle),\n    link: {\n      color: 'white',\n      textDecorationLine: 'underline'\n    }\n  })\n};\nvar DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];\nexport function MessageText(_ref) {\n  var _ref$currentMessage = _ref.currentMessage,\n      currentMessage = _ref$currentMessage === void 0 ? {} : _ref$currentMessage,\n      _ref$optionTitles = _ref.optionTitles,\n      optionTitles = _ref$optionTitles === void 0 ? DEFAULT_OPTION_TITLES : _ref$optionTitles,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'left' : _ref$position,\n      containerStyle = _ref.containerStyle,\n      textStyle = _ref.textStyle,\n      linkStyleProp = _ref.linkStyle,\n      customTextStyle = _ref.customTextStyle,\n      _ref$parsePatterns = _ref.parsePatterns,\n      parsePatterns = _ref$parsePatterns === void 0 ? function () {\n    return [];\n  } : _ref$parsePatterns,\n      textProps = _ref.textProps;\n\n  var _useChatContext = useChatContext(),\n      actionSheet = _useChatContext.actionSheet;\n\n  var onUrlPress = function onUrlPress(url) {\n    if (WWW_URL_PATTERN.test(url)) {\n      onUrlPress(\"https://\" + url);\n    } else {\n      Linking.openURL(url).catch(function (e) {\n        error(e, 'No handler for URL:', url);\n      });\n    }\n  };\n\n  var onPhonePress = function onPhonePress(phone) {\n    var options = optionTitles && optionTitles.length > 0 ? optionTitles.slice(0, 3) : DEFAULT_OPTION_TITLES;\n    var cancelButtonIndex = options.length - 1;\n    actionSheet().showActionSheetWithOptions({\n      options: options,\n      cancelButtonIndex: cancelButtonIndex\n    }, function (buttonIndex) {\n      switch (buttonIndex) {\n        case 0:\n          Linking.openURL(\"tel:\" + phone).catch(function (e) {\n            error(e, 'No handler for telephone');\n          });\n          break;\n\n        case 1:\n          Linking.openURL(\"sms:\" + phone).catch(function (e) {\n            error(e, 'No handler for text');\n          });\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  var onEmailPress = function onEmailPress(email) {\n    return Linking.openURL(\"mailto:\" + email).catch(function (e) {\n      return error(e, 'No handler for mailto');\n    });\n  };\n\n  var linkStyle = [styles[position].link, linkStyleProp && linkStyleProp[position]];\n  return _jsx(View, {\n    style: [styles[position].container, containerStyle && containerStyle[position]],\n    children: _jsx(ParsedText, {\n      style: [styles[position].text, textStyle && textStyle[position], customTextStyle],\n      parse: [].concat(_toConsumableArray(parsePatterns(linkStyle)), [{\n        type: 'url',\n        style: linkStyle,\n        onPress: onUrlPress\n      }, {\n        type: 'phone',\n        style: linkStyle,\n        onPress: onPhonePress\n      }, {\n        type: 'email',\n        style: linkStyle,\n        onPress: onEmailPress\n      }]),\n      childrenProps: _objectSpread({}, textProps),\n      children: currentMessage.text\n    })\n  });\n}\nMessageText.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  optionTitles: PropTypes.arrayOf(PropTypes.string),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  textStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  linkStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  parsePatterns: PropTypes.func,\n  textProps: PropTypes.object,\n  customTextStyle: StylePropType\n};","map":{"version":3,"mappings":"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","names":["PropTypes","React","ParsedText","StylePropType","useChatContext","error","WWW_URL_PATTERN","StyleSheet","create","textStyle","fontSize","lineHeight","marginTop","marginBottom","marginLeft","marginRight","styles","left","container","text","color","link","textDecorationLine","right","DEFAULT_OPTION_TITLES","MessageText","currentMessage","optionTitles","position","containerStyle","linkStyleProp","linkStyle","customTextStyle","parsePatterns","textProps","actionSheet","onUrlPress","url","test","Linking","openURL","catch","e","onPhonePress","phone","options","length","slice","cancelButtonIndex","showActionSheetWithOptions","buttonIndex","onEmailPress","email","type","style","onPress","propTypes","oneOf","arrayOf","string","object","shape","func"],"sourceRoot":"","sources":["../src/MessageText.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}