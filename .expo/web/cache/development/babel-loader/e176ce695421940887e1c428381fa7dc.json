{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/runner/work/react-native-action-sheet/react-native-action-sheet/src/ActionSheet/ActionGroup.tsx\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedbackSafe from \"./TouchableNativeFeedbackSafe\";\nvar BLACK_54PC_TRANSPARENT = '#0000008a';\nvar BLACK_87PC_TRANSPARENT = '#000000de';\nvar DESTRUCTIVE_COLOR = '#d32f2f';\n\nvar focusViewOnRender = function focusViewOnRender(ref) {\n  if (ref) {\n    var reactTag = findNodeHandle(ref);\n\n    if (reactTag) {\n      if (Platform.OS === 'android') {\n        UIManager.sendAccessibilityEvent(reactTag, UIManager.AccessibilityEventTypes.typeViewFocused);\n      } else {\n        AccessibilityInfo.setAccessibilityFocus(reactTag);\n      }\n    }\n  }\n};\n\nvar isIndexDestructive = function isIndexDestructive(index, destructiveIndex) {\n  if (Array.isArray(destructiveIndex)) {\n    return destructiveIndex.includes(index);\n  }\n\n  return index === destructiveIndex;\n};\n\nvar isIndexDisabled = function isIndexDisabled(index) {\n  var disabledButtonIndices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return disabledButtonIndices.includes(index);\n};\n\nvar ActionGroup = function (_React$Component) {\n  _inherits(ActionGroup, _React$Component);\n\n  var _super = _createSuper(ActionGroup);\n\n  function ActionGroup() {\n    var _this;\n\n    _classCallCheck(this, ActionGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._renderRowSeparator = function (key) {\n      return React.createElement(View, {\n        key: \"separator-\" + key,\n        style: [styles.rowSeparator, _this.props.separatorStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this._renderTitleContent = function () {\n      var _this$props = _this.props,\n          title = _this$props.title,\n          titleTextStyle = _this$props.titleTextStyle,\n          message = _this$props.message,\n          messageTextStyle = _this$props.messageTextStyle,\n          showSeparators = _this$props.showSeparators;\n\n      if (!title && !message) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.titleContainer, {\n          paddingBottom: showSeparators ? 24 : 16\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, !!title && React.createElement(Text, {\n        style: [styles.title, titleTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, title), !!message && React.createElement(Text, {\n        style: [styles.message, messageTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, message)), !!showSeparators && _this._renderRowSeparator('title'));\n    };\n\n    _this._renderIconElement = function (iconSource, color) {\n      var tintIcons = _this.props.tintIcons;\n\n      if (!iconSource) {\n        return null;\n      }\n\n      if (typeof iconSource === 'number') {\n        var iconStyle = [styles.icon, {\n          tintColor: tintIcons ? color : undefined\n        }];\n        return React.createElement(Image, {\n          fadeDuration: 0,\n          source: iconSource,\n          resizeMode: \"contain\",\n          style: iconStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 14\n          }\n        }, iconSource);\n      }\n    };\n\n    _this._renderOptionViews = function () {\n      var _this$props2 = _this.props,\n          options = _this$props2.options,\n          icons = _this$props2.icons,\n          destructiveButtonIndex = _this$props2.destructiveButtonIndex,\n          disabledButtonIndices = _this$props2.disabledButtonIndices,\n          _this$props2$destruct = _this$props2.destructiveColor,\n          destructiveColor = _this$props2$destruct === void 0 ? DESTRUCTIVE_COLOR : _this$props2$destruct,\n          onSelect = _this$props2.onSelect,\n          startIndex = _this$props2.startIndex,\n          length = _this$props2.length,\n          textStyle = _this$props2.textStyle,\n          tintColor = _this$props2.tintColor,\n          autoFocus = _this$props2.autoFocus,\n          showSeparators = _this$props2.showSeparators;\n      var optionViews = [];\n      var nativeFeedbackBackground = TouchableNativeFeedbackSafe.Ripple('rgba(180, 180, 180, 1)', false);\n\n      var _loop = function _loop(_i) {\n        var defaultColor = tintColor ? tintColor : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n        var disabled = isIndexDisabled(_i, disabledButtonIndices);\n        var color = isIndexDestructive(_i, destructiveButtonIndex) ? destructiveColor : defaultColor;\n        var iconSource = icons != null ? icons[_i] : null;\n        optionViews.push(React.createElement(TouchableNativeFeedbackSafe, {\n          ref: autoFocus && _i === 0 ? focusViewOnRender : undefined,\n          key: _i,\n          pressInDelay: 0,\n          background: nativeFeedbackBackground,\n          disabled: disabled,\n          onPress: function onPress() {\n            return onSelect(_i);\n          },\n          style: [styles.button, disabled && styles.disabledButton],\n          accessibilityRole: \"button\",\n          accessibilityLabel: options[_i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 9\n          }\n        }, _this._renderIconElement(iconSource, color), React.createElement(Text, {\n          style: [styles.text, textStyle, {\n            color: color\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, options[_i])));\n\n        if (showSeparators && _i < startIndex + length - 1) {\n          optionViews.push(_this._renderRowSeparator(_i));\n        }\n      };\n\n      for (var _i = startIndex; _i < startIndex + length; _i++) {\n        _loop(_i);\n      }\n\n      return optionViews;\n    };\n\n    return _this;\n  }\n\n  _createClass(ActionGroup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.groupContainer, this.props.containerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, this._renderTitleContent(), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, this._renderOptionViews()));\n    }\n  }]);\n\n  return ActionGroup;\n}(React.Component);\n\nActionGroup.defaultProps = {\n  title: null,\n  message: null,\n  showSeparators: false,\n  tintIcons: true,\n  textStyle: {}\n};\nexport { ActionGroup as default };\nvar styles = StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16\n  },\n  disabledButton: {\n    opacity: 0.5\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden'\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n    justifyContent: 'center'\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%'\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center'\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24\n  }\n});","map":{"version":3,"mappings":"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","names":["React","TouchableNativeFeedbackSafe","BLACK_54PC_TRANSPARENT","BLACK_87PC_TRANSPARENT","DESTRUCTIVE_COLOR","focusViewOnRender","ref","reactTag","findNodeHandle","Platform","OS","UIManager","sendAccessibilityEvent","AccessibilityEventTypes","typeViewFocused","AccessibilityInfo","setAccessibilityFocus","isIndexDestructive","index","destructiveIndex","Array","isArray","includes","isIndexDisabled","disabledButtonIndices","ActionGroup","_renderRowSeparator","key","View","style","styles","rowSeparator","_this","props","separatorStyle","__source","fileName","lineNumber","columnNumber","_renderTitleContent","title","titleTextStyle","message","messageTextStyle","showSeparators","titleContainer","paddingBottom","Text","_renderIconElement","iconSource","color","tintIcons","iconStyle","icon","tintColor","undefined","Image","fadeDuration","source","resizeMode","_renderOptionViews","options","icons","destructiveButtonIndex","destructiveColor","onSelect","startIndex","length","textStyle","autoFocus","optionViews","nativeFeedbackBackground","Ripple","i","defaultColor","disabled","push","pressInDelay","background","onPress","button","disabledButton","accessibilityRole","accessibilityLabel","text","_loop","groupContainer","containerStyle","ScrollView","Component","defaultProps","StyleSheet","create","justifyContent","alignItems","flexDirection","height","paddingHorizontal","opacity","backgroundColor","overflow","width","marginRight","marginTop","fontSize","textAlignVertical","padding","paddingTop"],"sources":["ActionGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  findNodeHandle,\n  Image,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  UIManager,\n  View,\n} from 'react-native';\n\nimport { ActionSheetOptions } from '../types';\nimport TouchableNativeFeedbackSafe from './TouchableNativeFeedbackSafe';\n\ntype Props = ActionSheetOptions & {\n  tintIcons: boolean | null;\n  onSelect: (i: number) => boolean;\n  startIndex: number;\n  length: number;\n};\n\nconst BLACK_54PC_TRANSPARENT = '#0000008a';\nconst BLACK_87PC_TRANSPARENT = '#000000de';\nconst DESTRUCTIVE_COLOR = '#d32f2f';\n\n/**\n * Can be used as a React ref for a component to auto-focus for accessibility on render.\n * @param ref The component to auto-focus\n */\nconst focusViewOnRender = (ref: React.Component | null) => {\n  if (ref) {\n    const reactTag = findNodeHandle(ref);\n    if (reactTag) {\n      if (Platform.OS === 'android') {\n        // @ts-ignore: sendAccessibilityEvent is missing from @types/react-native\n        UIManager.sendAccessibilityEvent(\n          reactTag,\n          // @ts-ignore: AccessibilityEventTypes is missing from @types/react-native\n          UIManager.AccessibilityEventTypes.typeViewFocused\n        );\n      } else {\n        AccessibilityInfo.setAccessibilityFocus(reactTag);\n      }\n    }\n  }\n};\n\nconst isIndexDestructive = (index: number, destructiveIndex?: number | number[]) => {\n  if (Array.isArray(destructiveIndex)) {\n    return destructiveIndex.includes(index);\n  }\n\n  return index === destructiveIndex;\n};\n\nconst isIndexDisabled = (index: number, disabledButtonIndices: number[] = []) => {\n  return disabledButtonIndices.includes(index);\n};\n\nexport default class ActionGroup extends React.Component<Props> {\n  static defaultProps = {\n    title: null,\n    message: null,\n    showSeparators: false,\n    tintIcons: true,\n    textStyle: {},\n  };\n\n  render() {\n    return (\n      <View style={[styles.groupContainer, this.props.containerStyle]}>\n        {this._renderTitleContent()}\n        <ScrollView>{this._renderOptionViews()}</ScrollView>\n      </View>\n    );\n  }\n\n  _renderRowSeparator = (key: string | number) => {\n    return (\n      <View key={`separator-${key}`} style={[styles.rowSeparator, this.props.separatorStyle]} />\n    );\n  };\n\n  _renderTitleContent = () => {\n    const { title, titleTextStyle, message, messageTextStyle, showSeparators } = this.props;\n\n    if (!title && !message) {\n      return null;\n    }\n\n    return (\n      <View>\n        <View style={[styles.titleContainer, { paddingBottom: showSeparators ? 24 : 16 }]}>\n          {!!title && <Text style={[styles.title, titleTextStyle]}>{title}</Text>}\n          {!!message && <Text style={[styles.message, messageTextStyle]}>{message}</Text>}\n        </View>\n        {!!showSeparators && this._renderRowSeparator('title')}\n      </View>\n    );\n  };\n\n  _renderIconElement = (iconSource: React.ReactNode | null, color: string) => {\n    const { tintIcons } = this.props;\n    if (!iconSource) {\n      return null;\n    }\n\n    if (typeof iconSource === 'number') {\n      const iconStyle = [styles.icon, { tintColor: tintIcons ? color : undefined }];\n      return <Image fadeDuration={0} source={iconSource} resizeMode=\"contain\" style={iconStyle} />;\n    } else {\n      return <View style={styles.icon}>{iconSource}</View>;\n    }\n  };\n\n  _renderOptionViews = () => {\n    const {\n      options,\n      icons,\n      destructiveButtonIndex,\n      disabledButtonIndices,\n      destructiveColor = DESTRUCTIVE_COLOR,\n      onSelect,\n      startIndex,\n      length,\n      textStyle,\n      tintColor,\n      autoFocus,\n      showSeparators,\n    } = this.props;\n    const optionViews: React.ReactNode[] = [];\n    const nativeFeedbackBackground = TouchableNativeFeedbackSafe.Ripple(\n      'rgba(180, 180, 180, 1)',\n      false\n    );\n\n    for (let i = startIndex; i < startIndex + length; i++) {\n      const defaultColor = tintColor\n        ? tintColor\n        : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n      const disabled = isIndexDisabled(i, disabledButtonIndices);\n      const color = isIndexDestructive(i, destructiveButtonIndex) ? destructiveColor : defaultColor;\n      const iconSource = icons != null ? icons[i] : null;\n\n      optionViews.push(\n        <TouchableNativeFeedbackSafe\n          ref={autoFocus && i === 0 ? focusViewOnRender : undefined}\n          key={i}\n          pressInDelay={0}\n          background={nativeFeedbackBackground}\n          disabled={disabled}\n          onPress={() => onSelect(i)}\n          style={[styles.button, disabled && styles.disabledButton]}\n          accessibilityRole=\"button\"\n          accessibilityLabel={options[i]}>\n          {this._renderIconElement(iconSource, color)}\n          <Text style={[styles.text, textStyle, { color }]}>{options[i]}</Text>\n        </TouchableNativeFeedbackSafe>\n      );\n\n      if (showSeparators && i < startIndex + length - 1) {\n        optionViews.push(this._renderRowSeparator(i));\n      }\n    }\n\n    return optionViews;\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n    justifyContent: 'center',\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%',\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}