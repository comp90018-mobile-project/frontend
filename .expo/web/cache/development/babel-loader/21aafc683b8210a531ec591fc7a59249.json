{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport firebaseConfig from \"../../authBase\";\nimport { getAuth } from 'firebase/auth';\nvar auth = getAuth(firebaseConfig);\nexport var fetchUser = createAsyncThunk('user/fetchUser', function _callee(email) {\n  var response;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://52.62.135.159:8000/api/v1/users/profile?username=' + email));\n\n        case 2:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.json());\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nexport var createUser = createAsyncThunk('user/createUser', function _callee2(params) {\n  var username, password, requestOptions, response;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          username = params.username, password = params.password;\n          console.log(\"2\", username, password);\n          requestOptions = {\n            method: 'POST',\n            body: JSON.stringify({\n              username: username,\n              password: password\n            })\n          };\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(fetch('http://52.62.135.159:8000/api/v1/users', requestOptions));\n\n        case 5:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response.json());\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nexport var fetchEvents = createAsyncThunk('event/fetchEvents', function _callee3(params) {\n  var requestOptions, response;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          requestOptions = {\n            method: 'GET'\n          };\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch('http://52.62.135.159:8000/api/v1/events', requestOptions));\n\n        case 3:\n          response = _context3.sent;\n          console.log(\"response\", response);\n          return _context3.abrupt(\"return\", response.json());\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});","map":{"version":3,"names":["createAsyncThunk","firebaseConfig","getAuth","auth","fetchUser","email","fetch","response","json","createUser","params","username","password","console","log","requestOptions","method","body","JSON","stringify","fetchEvents"],"sources":["/Users/tangweijia/Desktop/mobile/team2/frontend/src/services/api.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport firebaseConfig from '../../authBase';\nimport {\n  getAuth,\n} from 'firebase/auth';\n\nconst auth = getAuth(firebaseConfig);\n\nexport const fetchUser = createAsyncThunk('user/fetchUser', async (email) => {\n  const response = await fetch('http://52.62.135.159:8000/api/v1/users/profile?username=' + \n  email);\n  return response.json()\n})\n\nexport const createUser = createAsyncThunk('user/createUser', async(params) => {\n  const {username, password} = params;\n  console.log(\"2\", username, password);\n  const requestOptions = {\n    method: 'POST',\n    body: JSON.stringify({ username: username, password: password})\n  };\n  const response = await fetch('http://52.62.135.159:8000/api/v1/users', requestOptions)\n  return response.json()\n})\n\nexport const fetchEvents = createAsyncThunk('event/fetchEvents', async (params) => {\n  const requestOptions = {\n    method: 'GET',\n    // body: JSON.stringify({})\n  };\n  const response = await fetch('http://52.62.135.159:8000/api/v1/events', requestOptions)\n  console.log(\"response\", response);\n  return response.json()\n})\n"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,cAAP;AACA,SACEC,OADF,QAEO,eAFP;AAIA,IAAMC,IAAI,GAAGD,OAAO,CAACD,cAAD,CAApB;AAEA,OAAO,IAAMG,SAAS,GAAGJ,gBAAgB,CAAC,gBAAD,EAAmB,iBAAOK,KAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACnCC,KAAK,CAAC,6DAC7BD,KAD4B,CAD8B;;QAAA;UACpDE,QADoD;UAAA,iCAGnDA,QAAQ,CAACC,IAAT,EAHmD;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAnB,CAAlC;AAMP,OAAO,IAAMC,UAAU,GAAGT,gBAAgB,CAAC,iBAAD,EAAoB,kBAAMU,MAAN;EAAA;EAAA;IAAA;MAAA;QAAA;UACrDC,QADqD,GAC/BD,MAD+B,CACrDC,QADqD,EAC3CC,QAD2C,GAC/BF,MAD+B,CAC3CE,QAD2C;UAE5DC,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBH,QAAjB,EAA2BC,QAA3B;UACMG,cAHsD,GAGrC;YACrBC,MAAM,EAAE,MADa;YAErBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;cAAER,QAAQ,EAAEA,QAAZ;cAAsBC,QAAQ,EAAEA;YAAhC,CAAf;UAFe,CAHqC;UAAA;UAAA,iCAOrCN,KAAK,CAAC,wCAAD,EAA2CS,cAA3C,CAPgC;;QAAA;UAOtDR,QAPsD;UAAA,kCAQrDA,QAAQ,CAACC,IAAT,EARqD;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAApB,CAAnC;AAWP,OAAO,IAAMY,WAAW,GAAGpB,gBAAgB,CAAC,mBAAD,EAAsB,kBAAOU,MAAP;EAAA;EAAA;IAAA;MAAA;QAAA;UACzDK,cADyD,GACxC;YACrBC,MAAM,EAAE;UADa,CADwC;UAAA;UAAA,iCAKxCV,KAAK,CAAC,yCAAD,EAA4CS,cAA5C,CALmC;;QAAA;UAKzDR,QALyD;UAM/DM,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,QAAxB;UAN+D,kCAOxDA,QAAQ,CAACC,IAAT,EAPwD;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAtB,CAApC"},"metadata":{},"sourceType":"module"}