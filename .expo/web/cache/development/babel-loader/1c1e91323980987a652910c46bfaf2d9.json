{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TypingAnimation } from 'react-native-typing-animation';\nimport { useUpdateLayoutEffect } from \"./hooks/useUpdateLayoutEffect\";\nimport Color from \"./Color\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar TypingIndicator = function TypingIndicator(_ref) {\n  var isTyping = _ref.isTyping;\n\n  var _React$useMemo = React.useMemo(function () {\n    return {\n      yCoords: new Animated.Value(200),\n      heightScale: new Animated.Value(0),\n      marginScale: new Animated.Value(0)\n    };\n  }, []),\n      yCoords = _React$useMemo.yCoords,\n      heightScale = _React$useMemo.heightScale,\n      marginScale = _React$useMemo.marginScale;\n\n  useUpdateLayoutEffect(function () {\n    if (isTyping) {\n      slideIn();\n    } else {\n      slideOut();\n    }\n  }, [isTyping]);\n\n  var slideIn = function slideIn() {\n    Animated.parallel([Animated.spring(yCoords, {\n      toValue: 0,\n      useNativeDriver: false\n    }), Animated.timing(heightScale, {\n      toValue: 35,\n      duration: 250,\n      useNativeDriver: false\n    }), Animated.timing(marginScale, {\n      toValue: 8,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n\n  var slideOut = function slideOut() {\n    Animated.parallel([Animated.spring(yCoords, {\n      toValue: 200,\n      useNativeDriver: false\n    }), Animated.timing(heightScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    }), Animated.timing(marginScale, {\n      toValue: 0,\n      duration: 250,\n      useNativeDriver: false\n    })]).start();\n  };\n\n  return _jsx(Animated.View, {\n    style: [styles.container, {\n      transform: [{\n        translateY: yCoords\n      }],\n      height: heightScale,\n      marginBottom: marginScale\n    }],\n    children: isTyping ? _jsx(TypingAnimation, {\n      style: {\n        marginLeft: 6,\n        marginTop: 7.2\n      },\n      dotRadius: 4,\n      dotMargin: 5.5,\n      dotColor: 'rgba(0, 0, 0, 0.38)'\n    }) : null\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginLeft: 8,\n    width: 45,\n    borderRadius: 15,\n    backgroundColor: Color.leftBubbleBackground\n  }\n});\nexport default TypingIndicator;","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,qBAAT;AACA,OAAOC,KAAP;;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAwB;EAAA,IAArBC,QAAqB,QAArBA,QAAqB;;EAC9C,qBAA8CL,KAAK,CAACM,OAAN,CAC5C;IAAA,OAAO;MACLC,OAAO,EAAE,IAAIC,QAAQ,CAACC,KAAb,CAAmB,GAAnB,CADJ;MAELC,WAAW,EAAE,IAAIF,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAFR;MAGLE,WAAW,EAAE,IAAIH,QAAQ,CAACC,KAAb,CAAmB,CAAnB;IAHR,CAAP;EAAA,CAD4C,EAM5C,EAN4C,CAA9C;EAAA,IAAQF,OAAR,kBAAQA,OAAR;EAAA,IAAiBG,WAAjB,kBAAiBA,WAAjB;EAAA,IAA8BC,WAA9B,kBAA8BA,WAA9B;;EAUAT,qBAAqB,CAAC,YAAK;IACzB,IAAIG,QAAJ,EAAc;MACZO,OAAO;IACR,CAFD,MAEO;MACLC,QAAQ;IACT;EACF,CANoB,EAMlB,CAACR,QAAD,CANkB,CAArB;;EASA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAK;IACnBJ,QAAQ,CAACM,QAAT,CAAkB,CAChBN,QAAQ,CAACO,MAAT,CAAgBR,OAAhB,EAAyB;MACvBS,OAAO,EAAE,CADc;MAEvBC,eAAe,EAAE;IAFM,CAAzB,CADgB,EAKhBT,QAAQ,CAACU,MAAT,CAAgBR,WAAhB,EAA6B;MAC3BM,OAAO,EAAE,EADkB;MAE3BG,QAAQ,EAAE,GAFiB;MAG3BF,eAAe,EAAE;IAHU,CAA7B,CALgB,EAUhBT,QAAQ,CAACU,MAAT,CAAgBP,WAAhB,EAA6B;MAC3BK,OAAO,EAAE,CADkB;MAE3BG,QAAQ,EAAE,GAFiB;MAG3BF,eAAe,EAAE;IAHU,CAA7B,CAVgB,CAAlB,EAeGG,KAfH;EAgBD,CAjBD;;EAoBA,IAAMP,QAAQ,GAAG,SAAXA,QAAW,GAAK;IACpBL,QAAQ,CAACM,QAAT,CAAkB,CAChBN,QAAQ,CAACO,MAAT,CAAgBR,OAAhB,EAAyB;MACvBS,OAAO,EAAE,GADc;MAEvBC,eAAe,EAAE;IAFM,CAAzB,CADgB,EAKhBT,QAAQ,CAACU,MAAT,CAAgBR,WAAhB,EAA6B;MAC3BM,OAAO,EAAE,CADkB;MAE3BG,QAAQ,EAAE,GAFiB;MAG3BF,eAAe,EAAE;IAHU,CAA7B,CALgB,EAUhBT,QAAQ,CAACU,MAAT,CAAgBP,WAAhB,EAA6B;MAC3BK,OAAO,EAAE,CADkB;MAE3BG,QAAQ,EAAE,GAFiB;MAG3BF,eAAe,EAAE;IAHU,CAA7B,CAVgB,CAAlB,EAeGG,KAfH;EAgBD,CAjBD;;EAkBA,OACE,KAAC,QAAD,CAAU,IAAV;IACE,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAEL;MACEC,SAAS,EAAE,CACT;QACEC,UAAU,EAAEjB;MADd,CADS,CADb;MAMEkB,MAAM,EAAEf,WANV;MAOEgB,YAAY,EAAEf;IAPhB,CAFK,CADT;IAAA,UAcGN,QAAQ,GACP,KAAC,eAAD;MACE,KAAK,EAAE;QAAEsB,UAAU,EAAE,CAAd;QAAiBC,SAAS,EAAE;MAA5B,CADT;MAEE,SAAS,EAAE,CAFb;MAGE,SAAS,EAAE,GAHb;MAIE,QAAQ,EAAE;IAJZ,EADO,GAOL;EArBN,EADF;AAyBD,CAnFD;;AAqFA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IACTK,UAAU,EAAE,CADH;IAETI,KAAK,EAAE,EAFE;IAGTC,YAAY,EAAE,EAHL;IAITC,eAAe,EAAE9B,KAAK,CAAC+B;EAJd;AADoB,CAAlB,CAAf;AASA,eAAe9B,eAAf","names":["React","TypingAnimation","useUpdateLayoutEffect","Color","TypingIndicator","isTyping","useMemo","yCoords","Animated","Value","heightScale","marginScale","slideIn","slideOut","parallel","spring","toValue","useNativeDriver","timing","duration","start","styles","container","transform","translateY","height","marginBottom","marginLeft","marginTop","StyleSheet","create","width","borderRadius","backgroundColor","leftBubbleBackground"],"sourceRoot":"","sources":["../src/TypingIndicator.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}