{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport dayjs from 'dayjs';\nimport Color from \"./Color\";\nimport { StylePropType, isSameDay } from \"./utils\";\nimport { DATE_FORMAT } from \"./Constant\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.defaultColor,\n    fontSize: 12,\n    fontWeight: '600'\n  }\n});\nexport function Day(_ref) {\n  var _ref$dateFormat = _ref.dateFormat,\n      dateFormat = _ref$dateFormat === void 0 ? DATE_FORMAT : _ref$dateFormat,\n      currentMessage = _ref.currentMessage,\n      previousMessage = _ref.previousMessage,\n      containerStyle = _ref.containerStyle,\n      wrapperStyle = _ref.wrapperStyle,\n      textStyle = _ref.textStyle;\n\n  var _useChatContext = useChatContext(),\n      getLocale = _useChatContext.getLocale;\n\n  if (currentMessage == null || isSameDay(currentMessage, previousMessage)) {\n    return null;\n  }\n\n  return _jsx(View, {\n    style: [styles.container, containerStyle],\n    children: _jsx(View, {\n      style: wrapperStyle,\n      children: _jsx(Text, {\n        style: [styles.text, textStyle],\n        children: dayjs(currentMessage.createdAt).locale(getLocale()).format(dateFormat)\n      })\n    })\n  });\n}\nDay.propTypes = {\n  currentMessage: PropTypes.object,\n  previousMessage: PropTypes.object,\n  nextMessage: PropTypes.object,\n  inverted: PropTypes.bool,\n  containerStyle: StylePropType,\n  wrapperStyle: StylePropType,\n  textStyle: StylePropType,\n  dateFormat: PropTypes.string\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP;AACA,SAASC,aAAT,EAAwBC,SAAxB;AACA,SAASC,WAAT;AAGA,SAASC,cAAT;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,UAAU,EAAE,QADH;IAETC,cAAc,EAAE,QAFP;IAGTC,SAAS,EAAE,CAHF;IAITC,YAAY,EAAE;EAJL,CADoB;EAO/BC,IAAI,EAAE;IACJC,eAAe,EAAEd,KAAK,CAACe,qBADnB;IAEJC,KAAK,EAAEhB,KAAK,CAACiB,YAFT;IAGJC,QAAQ,EAAE,EAHN;IAIJC,UAAU,EAAE;EAJR;AAPyB,CAAlB,CAAf;AA2BA,OAAM,SAAUC,GAAV,OAOe;EAAA,2BANnBC,UAMmB;EAAA,IANnBA,UAMmB,gCANNlB,WAMM;EAAA,IALnBmB,cAKmB,QALnBA,cAKmB;EAAA,IAJnBC,eAImB,QAJnBA,eAImB;EAAA,IAHnBC,cAGmB,QAHnBA,cAGmB;EAAA,IAFnBC,YAEmB,QAFnBA,YAEmB;EAAA,IADnBC,SACmB,QADnBA,SACmB;;EACnB,sBAAsBtB,cAAc,EAApC;EAAA,IAAQuB,SAAR,mBAAQA,SAAR;;EAEA,IAAIL,cAAc,IAAI,IAAlB,IAA0BpB,SAAS,CAACoB,cAAD,EAAiBC,eAAjB,CAAvC,EAA0E;IACxE,OAAO,IAAP;EACD;;EAED,OACE,KAAC,IAAD;IAAM,KAAK,EAAE,CAAClB,MAAM,CAACG,SAAR,EAAmBgB,cAAnB,CAAb;IAAA,UACE,KAAC,IAAD;MAAM,KAAK,EAAEC,YAAb;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACpB,MAAM,CAACQ,IAAR,EAAca,SAAd,CAAb;QAAA,UACG3B,KAAK,CAACuB,cAAc,CAACM,SAAhB,CAAL,CACEC,MADF,CACSF,SAAS,EADlB,EAEEG,MAFF,CAEST,UAFT;MADH;IADF;EADF,EADF;AAWD;AAEDD,GAAG,CAACW,SAAJ,GAAgB;EACdT,cAAc,EAAExB,SAAS,CAACkC,MADZ;EAEdT,eAAe,EAAEzB,SAAS,CAACkC,MAFb;EAGdC,WAAW,EAAEnC,SAAS,CAACkC,MAHT;EAIdE,QAAQ,EAAEpC,SAAS,CAACqC,IAJN;EAKdX,cAAc,EAAEvB,aALF;EAMdwB,YAAY,EAAExB,aANA;EAOdyB,SAAS,EAAEzB,aAPG;EAQdoB,UAAU,EAAEvB,SAAS,CAACsC;AARR,CAAhB","names":["React","PropTypes","dayjs","Color","StylePropType","isSameDay","DATE_FORMAT","useChatContext","styles","StyleSheet","create","container","alignItems","justifyContent","marginTop","marginBottom","text","backgroundColor","backgroundTransparent","color","defaultColor","fontSize","fontWeight","Day","dateFormat","currentMessage","previousMessage","containerStyle","wrapperStyle","textStyle","getLocale","createdAt","locale","format","propTypes","object","nextMessage","inverted","bool","string"],"sourceRoot":"","sources":["../src/Day.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}