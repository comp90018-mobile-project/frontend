{"ast":null,"code":"var RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture'\n      }\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture'\n      }\n    },\n    topContentSizeChange: {\n      phasedRegistrationNames: {\n        captured: 'onContentSizeChangeCapture',\n        bubbled: 'onContentSizeChange'\n      }\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture'\n      }\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture'\n      }\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture'\n      }\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture'\n      }\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture'\n      }\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture'\n      }\n    },\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture'\n      }\n    }\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput'\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync'\n    },\n    topScroll: {\n      registrationName: 'onScroll'\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange'\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync'\n    }\n  },\n  validAttributes: {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    textShadowOffset: {\n      diff: require(\"../../Utilities/differ/sizesDiffer\")\n    },\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    color: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    maxFontSizeMultiplier: true,\n    textShadowColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    blurOnSubmit: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {\n      process: require(\"../../StyleSheet/processColor\")\n    },\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true\n  }\n};\nmodule.exports = RCTTextInputViewConfig;","map":{"version":3,"names":["RCTTextInputViewConfig","bubblingEventTypes","topBlur","phasedRegistrationNames","bubbled","captured","topChange","topContentSizeChange","topEndEditing","topFocus","topKeyPress","topSubmitEditing","topTouchCancel","topTouchEnd","topTouchMove","directEventTypes","topTextInput","registrationName","topKeyPressSync","topScroll","topSelectionChange","topChangeSync","validAttributes","fontSize","fontWeight","fontVariant","textShadowOffset","diff","require","allowFontScaling","fontStyle","textTransform","textAlign","fontFamily","lineHeight","isHighlighted","writingDirection","textDecorationLine","textShadowRadius","letterSpacing","textDecorationStyle","textDecorationColor","process","color","maxFontSizeMultiplier","textShadowColor","editable","inputAccessoryViewID","caretHidden","enablesReturnKeyAutomatically","placeholderTextColor","clearButtonMode","keyboardType","selection","returnKeyType","blurOnSubmit","mostRecentEventCount","scrollEnabled","selectionColor","contextMenuHidden","secureTextEntry","placeholder","autoCorrect","multiline","textContentType","maxLength","autoCapitalize","keyboardAppearance","passwordRules","spellCheck","selectTextOnFocus","text","clearTextOnFocus","showSoftInputOnFocus","autoFocus","module","exports"],"sources":["/Users/tangweijia/Desktop/mobile/team2/frontend/node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PartialViewConfig} from '../../Renderer/shims/ReactNativeTypes';\n\ntype PartialViewConfigWithoutName = $Rest<\n  PartialViewConfig,\n  {uiViewClassName: string},\n>;\n\nconst RCTTextInputViewConfig = {\n  bubblingEventTypes: {\n    topBlur: {\n      phasedRegistrationNames: {\n        bubbled: 'onBlur',\n        captured: 'onBlurCapture',\n      },\n    },\n    topChange: {\n      phasedRegistrationNames: {\n        bubbled: 'onChange',\n        captured: 'onChangeCapture',\n      },\n    },\n    topContentSizeChange: {\n      phasedRegistrationNames: {\n        captured: 'onContentSizeChangeCapture',\n        bubbled: 'onContentSizeChange',\n      },\n    },\n    topEndEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onEndEditing',\n        captured: 'onEndEditingCapture',\n      },\n    },\n    topFocus: {\n      phasedRegistrationNames: {\n        bubbled: 'onFocus',\n        captured: 'onFocusCapture',\n      },\n    },\n    topKeyPress: {\n      phasedRegistrationNames: {\n        bubbled: 'onKeyPress',\n        captured: 'onKeyPressCapture',\n      },\n    },\n    topSubmitEditing: {\n      phasedRegistrationNames: {\n        bubbled: 'onSubmitEditing',\n        captured: 'onSubmitEditingCapture',\n      },\n    },\n    topTouchCancel: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchCancel',\n        captured: 'onTouchCancelCapture',\n      },\n    },\n    topTouchEnd: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchEnd',\n        captured: 'onTouchEndCapture',\n      },\n    },\n\n    topTouchMove: {\n      phasedRegistrationNames: {\n        bubbled: 'onTouchMove',\n        captured: 'onTouchMoveCapture',\n      },\n    },\n  },\n  directEventTypes: {\n    topTextInput: {\n      registrationName: 'onTextInput',\n    },\n    topKeyPressSync: {\n      registrationName: 'onKeyPressSync',\n    },\n    topScroll: {\n      registrationName: 'onScroll',\n    },\n    topSelectionChange: {\n      registrationName: 'onSelectionChange',\n    },\n    topChangeSync: {\n      registrationName: 'onChangeSync',\n    },\n  },\n  validAttributes: {\n    fontSize: true,\n    fontWeight: true,\n    fontVariant: true,\n    // flowlint-next-line untyped-import:off\n    textShadowOffset: {diff: require('../../Utilities/differ/sizesDiffer')},\n    allowFontScaling: true,\n    fontStyle: true,\n    textTransform: true,\n    textAlign: true,\n    fontFamily: true,\n    lineHeight: true,\n    isHighlighted: true,\n    writingDirection: true,\n    textDecorationLine: true,\n    textShadowRadius: true,\n    letterSpacing: true,\n    textDecorationStyle: true,\n    textDecorationColor: {process: require('../../StyleSheet/processColor')},\n    color: {process: require('../../StyleSheet/processColor')},\n    maxFontSizeMultiplier: true,\n    textShadowColor: {process: require('../../StyleSheet/processColor')},\n    editable: true,\n    inputAccessoryViewID: true,\n    caretHidden: true,\n    enablesReturnKeyAutomatically: true,\n    placeholderTextColor: {process: require('../../StyleSheet/processColor')},\n    clearButtonMode: true,\n    keyboardType: true,\n    selection: true,\n    returnKeyType: true,\n    blurOnSubmit: true,\n    mostRecentEventCount: true,\n    scrollEnabled: true,\n    selectionColor: {process: require('../../StyleSheet/processColor')},\n    contextMenuHidden: true,\n    secureTextEntry: true,\n    placeholder: true,\n    autoCorrect: true,\n    multiline: true,\n    textContentType: true,\n    maxLength: true,\n    autoCapitalize: true,\n    keyboardAppearance: true,\n    passwordRules: true,\n    spellCheck: true,\n    selectTextOnFocus: true,\n    text: true,\n    clearTextOnFocus: true,\n    showSoftInputOnFocus: true,\n    autoFocus: true,\n  },\n};\n\nmodule.exports = (RCTTextInputViewConfig: PartialViewConfigWithoutName);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}