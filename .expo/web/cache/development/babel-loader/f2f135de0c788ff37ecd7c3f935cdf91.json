{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { useCallbackOne } from 'use-memo-one';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Actions(_ref) {\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options,\n      _ref$optionTintColor = _ref.optionTintColor,\n      optionTintColor = _ref$optionTintColor === void 0 ? Color.optionTintColor : _ref$optionTintColor,\n      icon = _ref.icon,\n      wrapperStyle = _ref.wrapperStyle,\n      iconTextStyle = _ref.iconTextStyle,\n      onPressActionButton = _ref.onPressActionButton,\n      containerStyle = _ref.containerStyle;\n\n  var _useChatContext = useChatContext(),\n      actionSheet = _useChatContext.actionSheet;\n\n  var onActionsPress = useCallbackOne(function () {\n    var optionKeys = Object.keys(options);\n    var cancelButtonIndex = optionKeys.indexOf('Cancel');\n    actionSheet().showActionSheetWithOptions({\n      options: optionKeys,\n      cancelButtonIndex: cancelButtonIndex,\n      tintColor: optionTintColor\n    }, function (buttonIndex) {\n      var key = optionKeys[buttonIndex];\n\n      if (key) {\n        options[key]();\n      }\n    });\n  }, []);\n  var renderIcon = useCallbackOne(function () {\n    if (icon) {\n      return icon();\n    }\n\n    return _jsx(View, {\n      style: [styles.wrapper, wrapperStyle],\n      children: _jsx(Text, {\n        style: [styles.iconText, iconTextStyle],\n        children: \"+\"\n      })\n    });\n  }, []);\n  return _jsx(TouchableOpacity, {\n    style: [styles.container, containerStyle],\n    onPress: onPressActionButton || onActionsPress,\n    children: renderIcon()\n  });\n}\nActions.propTypes = {\n  onSend: PropTypes.func,\n  options: PropTypes.object,\n  optionTintColor: PropTypes.string,\n  icon: PropTypes.func,\n  onPressActionButton: PropTypes.func,\n  wrapperStyle: StylePropType,\n  containerStyle: StylePropType\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: 26,\n    height: 26,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  wrapper: {\n    borderRadius: 13,\n    borderColor: Color.defaultColor,\n    borderWidth: 2,\n    flex: 1\n  },\n  iconText: {\n    color: Color.defaultColor,\n    fontWeight: 'bold',\n    fontSize: 16,\n    backgroundColor: Color.backgroundTransparent,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["PropTypes","React","Color","StylePropType","useChatContext","useCallbackOne","Actions","options","optionTintColor","icon","wrapperStyle","iconTextStyle","onPressActionButton","containerStyle","actionSheet","onActionsPress","optionKeys","Object","keys","cancelButtonIndex","indexOf","showActionSheetWithOptions","tintColor","buttonIndex","key","renderIcon","styles","wrapper","iconText","container","propTypes","onSend","func","object","string","StyleSheet","create","width","height","marginLeft","marginBottom","borderRadius","borderColor","defaultColor","borderWidth","flex","color","fontWeight","fontSize","backgroundColor","backgroundTransparent","textAlign"],"sourceRoot":"","sources":["../src/Actions.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}