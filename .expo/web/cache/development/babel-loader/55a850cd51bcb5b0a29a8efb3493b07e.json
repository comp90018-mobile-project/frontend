{"ast":null,"code":"import { dispatchCommand } from \"../../Libraries/Renderer/shims/ReactNative\";\n\nfunction codegenNativeCommands(options) {\n  var commandObj = {};\n  options.supportedCommands.forEach(function (command) {\n    commandObj[command] = function (ref) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      dispatchCommand(ref, command, args);\n    };\n  });\n  return commandObj;\n}\n\nexport default codegenNativeCommands;","map":{"version":3,"names":["dispatchCommand","codegenNativeCommands","options","commandObj","supportedCommands","forEach","command","ref","args"],"sources":["/Users/tangweijia/Desktop/mobile/team2/frontend/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport {dispatchCommand} from '../../Libraries/Renderer/shims/ReactNative';\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj = {};\n\n  options.supportedCommands.forEach(command => {\n    commandObj[command] = (ref, ...args) => {\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n"],"mappings":"AAUA,SAAQA,eAAR;;AAMA,SAASC,qBAAT,CAAgDC,OAAhD,EAA+E;EAC7E,IAAMC,UAAU,GAAG,EAAnB;EAEAD,OAAO,CAACE,iBAAR,CAA0BC,OAA1B,CAAkC,UAAAC,OAAO,EAAI;IAC3CH,UAAU,CAACG,OAAD,CAAV,GAAsB,UAACC,GAAD,EAAkB;MAAA,kCAATC,IAAS;QAATA,IAAS;MAAA;;MACtCR,eAAe,CAACO,GAAD,EAAMD,OAAN,EAAeE,IAAf,CAAf;IACD,CAFD;EAGD,CAJD;EAMA,OAASL,UAAT;AACD;;AAED,eAAeF,qBAAf"},"metadata":{},"sourceType":"module"}